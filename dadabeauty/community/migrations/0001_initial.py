# -*- coding: utf-8 -*-
# Generated by Django 1.11.8 on 2019-12-15 10:54
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('user', '0002_auto_20191213_1619'),
    ]

    operations = [
        migrations.CreateModel(
            name='Blog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100, verbose_name='标题')),
                ('content', models.TextField(verbose_name='文章内容')),
                ('like_count', models.IntegerField(default=0, verbose_name='点赞数量')),
                ('forward_count', models.IntegerField(default=0, verbose_name='转发数量')),
                ('collect_count', models.IntegerField(default=0, verbose_name='收藏数量')),
                ('comment_count', models.IntegerField(default=0, verbose_name='评论数量')),
                ('is_active', models.BooleanField(default=True, verbose_name='删除与否')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
            ],
            options={
                'db_table': 'cblog',
            },
        ),
        migrations.CreateModel(
            name='Collect',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_active', models.BooleanField(default=True, verbose_name='删除与否')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('b_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='community.Blog')),
                ('uid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='collect_uid', to='user.UserProfile')),
            ],
            options={
                'db_table': 'ccollect',
            },
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField(verbose_name='评论内容')),
                ('is_active', models.BooleanField(default=True, verbose_name='删除与否')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('b_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='community.Blog')),
                ('uid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comment_uid', to='user.UserProfile')),
            ],
            options={
                'db_table': 'ccomment',
            },
        ),
        migrations.CreateModel(
            name='Forward',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.CharField(max_length=200, verbose_name='转发内容')),
                ('is_active', models.BooleanField(default=True, verbose_name='删除与否')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('b_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='community.Blog')),
                ('uid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user.UserProfile')),
            ],
            options={
                'db_table': 'cforward',
            },
        ),
        migrations.CreateModel(
            name='Image',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(default=0, upload_to='', verbose_name='图片路径')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('b_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='community.Blog')),
            ],
            options={
                'db_table': 'cimage',
            },
        ),
        migrations.CreateModel(
            name='Reply',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField(verbose_name='回复内容')),
                ('is_active', models.BooleanField(default=True, verbose_name='删除与否')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('c_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='community.Comment')),
                ('uid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reply_uid', to='user.UserProfile')),
            ],
            options={
                'db_table': 'creply',
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tag_name', models.CharField(max_length=20, verbose_name='标签名')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
            ],
            options={
                'db_table': 'ctag',
            },
        ),
        migrations.AddField(
            model_name='blog',
            name='tid',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='community.Tag'),
        ),
        migrations.AddField(
            model_name='blog',
            name='uid',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user.UserProfile'),
        ),
    ]
